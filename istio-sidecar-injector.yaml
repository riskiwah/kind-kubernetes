apiVersion: v1
data:
  config: |-
    policy: enabled
    alwaysInjectSelector:
      []
    neverInjectSelector:
      []
    injectedAnnotations:

    template: |
      rewriteAppHTTPProbe: {{ valueOrDefault .Values.sidecarInjectorWebhook.rewriteAppHTTPProbe false }}
      initContainers:
      {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
      {{ if .Values.istio_cni.enabled -}}
      - name: istio-validation
      {{ else -}}
      - name: istio-init
      {{ end -}}
      {{- if contains "/" .Values.global.proxy_init.image }}
        image: "{{ .Values.global.proxy_init.image }}"
      {{- else }}
        image: "{{ .Values.global.hub }}/{{ .Values.global.proxy_init.image }}:{{ .Values.global.tag }}"
      {{- end }}
        args:
        - istio-iptables
        - "-p"
        - 15001
        - "-z"
        - "15006"
        - "-u"
        - 1337
        - "-m"
        - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
        - "-i"
        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
        - "-x"
        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
        - "-b"
        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` `*` }}"
        - "-d"
      {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
        - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
      {{- else }}
        - "15090,15021"
      {{- end }}
        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
        - "-q"
        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
        {{ end -}}
        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
        - "-o"
        - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
        {{ end -}}
        {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
        - "-k"
        - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
        {{ end -}}
        {{ if .Values.istio_cni.enabled -}}
        - "--run-validation"
        - "--skip-rule-apply"
        {{ end -}}
        imagePullPolicy: "{{ valueOrDefault .Values.global.imagePullPolicy `Always` }}"
      {{- if .ProxyConfig.ProxyMetadata }}
        env:
        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
        - name: {{ $key }}
          value: "{{ $value }}"
        {{- end }}
      {{- end }}
      {{- if .Values.global.proxy_init.resources }}
        resources:
          {{ toYaml .Values.global.proxy_init.resources | indent 4 }}
      {{- else }}
        resources: {}
      {{- end }}
        securityContext:
          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
          privileged: {{ .Values.global.proxy.privileged }}
          capabilities:
        {{- if not .Values.istio_cni.enabled }}
            add:
            - NET_ADMIN
            - NET_RAW
        {{- end }}
            drop:
            - ALL
        {{- if not .Values.istio_cni.enabled }}
          readOnlyRootFilesystem: false
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
        {{- else }}
          readOnlyRootFilesystem: true
          runAsGroup: 1337
          runAsUser: 1337
          runAsNonRoot: true
        {{- end }}
        restartPolicy: Always
      {{ end -}}
      {{- if eq .Values.global.proxy.enableCoreDump true }}
      - name: enable-core-dump
        args:
        - -c
        - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy && ulimit -c unlimited
        command:
          - /bin/sh
      {{- if contains "/" .Values.global.proxy_init.image }}
        image: "{{ .Values.global.proxy_init.image }}"
      {{- else }}
        image: "{{ .Values.global.hub }}/{{ .Values.global.proxy_init.image }}:{{ .Values.global.tag }}"
      {{- end }}
        imagePullPolicy: "{{ valueOrDefault .Values.global.imagePullPolicy `Always` }}"
        resources: {}
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - SYS_ADMIN
            drop:
            - ALL
          privileged: true
          readOnlyRootFilesystem: false
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
      {{ end }}
      containers:
      - name: istio-proxy
      {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
        image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
      {{- else }}
        image: "{{ .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}"
      {{- end }}
        ports:
        - containerPort: 15090
          protocol: TCP
          name: http-envoy-prom
        args:
        - proxy
        - sidecar
        - --domain
        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
        - --serviceCluster
        {{ if ne "" (index .ObjectMeta.Labels "app") -}}
        - "{{ index .ObjectMeta.Labels `app` }}.$(POD_NAMESPACE)"
        {{ else -}}
        - "{{ valueOrDefault .DeploymentMeta.Name `istio-proxy` }}.{{ valueOrDefault .DeploymentMeta.Namespace `default` }}"
        {{ end -}}
        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel}}
        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel}}
      {{- if .Values.global.sts.servicePort }}
        - --stsPort={{ .Values.global.sts.servicePort }}
      {{- end }}
      {{- if .Values.global.trustDomain }}
        - --trust-domain={{ .Values.global.trustDomain }}
      {{- end }}
      {{- if .Values.global.logAsJson }}
        - --log_as_json
      {{- end }}
      {{- if gt .ProxyConfig.Concurrency.GetValue 0 }}
        - --concurrency
        - "{{ .ProxyConfig.Concurrency.GetValue }}"
      {{- end -}}
      {{- if .Values.global.proxy.lifecycle }}
        lifecycle:
          {{ toYaml .Values.global.proxy.lifecycle | indent 4 }}
      {{- else if .Values.global.proxy.holdApplicationUntilProxyStarts}}
        lifecycle:
          postStart:
            exec:
              command:
              - pilot-agent
              - wait
          preStop:
            exec:
              command: ["/bin/sh", "-c", "while [ $(netstat -plunt | grep tcp | grep -v envoy | wc -l | xargs) -ne 0 ]; do sleep 1; done"
      {{- end }}
        env:
        - name: JWT_POLICY
          value: {{ .Values.global.jwtPolicy }}
        - name: PILOT_CERT_PROVIDER
          value: {{ .Values.global.pilotCertProvider }}
        - name: CA_ADDR
        {{- if .Values.global.caAddress }}
          value: {{ .Values.global.caAddress }}
        {{- else }}
          value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
        {{- end }}
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: CANONICAL_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['service.istio.io/canonical-name']
        - name: CANONICAL_REVISION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['service.istio.io/canonical-revision']
        - name: PROXY_CONFIG
          value: |
                 {{ protoToJSON .ProxyConfig }}
        - name: ISTIO_META_POD_PORTS
          value: |-
            [
            {{- $first := true }}
            {{- range $index1, $c := .Spec.Containers }}
              {{- range $index2, $p := $c.Ports }}
                {{- if (structToJSON $p) }}
                {{if not $first}},{{end}}{{ structToJSON $p }}
                {{- $first = false }}
                {{- end }}
              {{- end}}
            {{- end}}
            ]
        - name: ISTIO_META_APP_CONTAINERS
          value: "{{- range $index, $container := .Spec.Containers }}{{- if ne $index 0}},{{- end}}{{ $container.Name }}{{- end}}"
        - name: ISTIO_META_CLUSTER_ID
          value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
        - name: ISTIO_META_INTERCEPTION_MODE
          value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
        {{- if .Values.global.network }}
        - name: ISTIO_META_NETWORK
          value: "{{ .Values.global.network }}"
        {{- end }}
        {{ if .ObjectMeta.Annotations }}
        - name: ISTIO_METAJSON_ANNOTATIONS
          value: |
                 {{ toJSON .ObjectMeta.Annotations }}
        {{ end }}
        {{- if .DeploymentMeta.Name }}
        - name: ISTIO_META_WORKLOAD_NAME
          value: {{ .DeploymentMeta.Name }}
        {{ end }}
        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
        - name: ISTIO_META_OWNER
          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
        {{- end}}
        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
        - name: ISTIO_BOOTSTRAP_OVERRIDE
          value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
        {{- end }}
        {{- if .Values.global.meshID }}
        - name: ISTIO_META_MESH_ID
          value: "{{ .Values.global.meshID }}"
        {{- else if .Values.global.trustDomain }}
        - name: ISTIO_META_MESH_ID
          value: "{{ .Values.global.trustDomain }}"
        {{- end }}
        {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
        - name: {{ $key }}
          value: "{{ $value }}"
        {{- end }}
        {{- end }}
        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
        - name: {{ $key }}
          value: "{{ $value }}"
        {{- end }}
        imagePullPolicy: "{{ valueOrDefault .Values.global.imagePullPolicy `Always` }}"
        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 15021
          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
        {{ end -}}
        securityContext:
          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
          capabilities:
            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
            add:
            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
            - NET_ADMIN
            {{- end }}
            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
            - NET_BIND_SERVICE
            {{- end }}
            {{- end }}
            drop:
            - ALL
          privileged: {{ .Values.global.proxy.privileged }}
          readOnlyRootFilesystem: {{ not .Values.global.proxy.enableCoreDump }}
          runAsGroup: 1337
          fsGroup: 1337
          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
          runAsNonRoot: false
          runAsUser: 0
          {{- else -}}
          runAsNonRoot: true
          runAsUser: 1337
          {{- end }}
        resources:
      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
          requests:
            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
            {{ end }}
            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
            {{ end }}
        {{- end }}
        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
          limits:
            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
            cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
            {{ end }}
            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
            memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
            {{ end }}
        {{- end }}
      {{- else }}
        {{- if .Values.global.proxy.resources }}
          {{ toYaml .Values.global.proxy.resources | indent 4 }}
        {{- end }}
      {{- end }}
        volumeMounts:
        {{- if eq .Values.global.pilotCertProvider "istiod" }}
        - mountPath: /var/run/secrets/istio
          name: istiod-ca-cert
        {{- end }}
        - mountPath: /var/lib/istio/data
          name: istio-data
        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
        - mountPath: /etc/istio/custom-bootstrap
          name: custom-bootstrap-volume
        {{- end }}
        # SDS channel between istioagent and Envoy
        - mountPath: /etc/istio/proxy
          name: istio-envoy
        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
        - mountPath: /var/run/secrets/tokens
          name: istio-token
        {{- end }}
        {{- if .Values.global.mountMtlsCerts }}
        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
        - mountPath: /etc/certs/
          name: istio-certs
          readOnly: true
        {{- end }}
        - name: istio-podinfo
          mountPath: /etc/istio/pod
         {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
          name: lightstep-certs
          readOnly: true
        {{- end }}
          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
        - name: "{{  $index }}"
          {{ toYaml $value | indent 4 }}
          {{ end }}
          {{- end }}
      {{- if .ProxyConfig.ProxyMetadata.ISTIO_META_DNS_CAPTURE }}
      dnsConfig:
        options:
        - name: "ndots"
          value: "4"
      {{- end }}
      volumes:
      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
      - name: custom-bootstrap-volume
        configMap:
          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
      {{- end }}
      # SDS channel between istioagent and Envoy
      - emptyDir:
          medium: Memory
        name: istio-envoy
      - name: istio-data
        emptyDir: {}
      - name: istio-podinfo
        downwardAPI:
          items:
            - path: "labels"
              fieldRef:
                fieldPath: metadata.labels
            - path: "annotations"
              fieldRef:
                fieldPath: metadata.annotations
      {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
      - name: istio-token
        projected:
          sources:
          - serviceAccountToken:
              path: istio-token
              expirationSeconds: 43200
              audience: {{ .Values.global.sds.token.aud }}
      {{- end }}
      {{- if eq .Values.global.pilotCertProvider "istiod" }}
      - name: istiod-ca-cert
        configMap:
          name: istio-ca-root-cert
      {{- end }}
      {{- if .Values.global.mountMtlsCerts }}
      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
      - name: istio-certs
        secret:
          optional: true
          {{ if eq .Spec.ServiceAccountName "" }}
          secretName: istio.default
          {{ else -}}
          secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
          {{  end -}}
      {{- end }}
        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
      - name: "{{ $index }}"
        {{ toYaml $value | indent 2 }}
        {{ end }}
        {{ end }}
      {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
      - name: lightstep-certs
        secret:
          optional: true
          secretName: lightstep.cacert
      {{- end }}
      {{- if .Values.global.podDNSSearchNamespaces }}
      dnsConfig:
        searches:
          {{- range .Values.global.podDNSSearchNamespaces }}
          - {{ render . }}
          {{- end }}
      {{- end }}
      podRedirectAnnot:
      {{- if and (.Values.istio_cni.enabled) (not .Values.istio_cni.chained) }}
      {{ if isset .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks` }}
        k8s.v1.cni.cncf.io/networks: "{{ index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`}}, istio-cni"
      {{- else }}
        k8s.v1.cni.cncf.io/networks: "istio-cni"
      {{- end }}
      {{- end }}
        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
        traffic.sidecar.istio.io/includeOutboundIPRanges: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
        traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
        traffic.sidecar.istio.io/includeInboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` (includeInboundPorts .Spec.Containers) }}"
        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
      {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
        traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
      {{- end }}
      {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
      {{- end }}
        traffic.sidecar.istio.io/kubevirtInterfaces: "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
        {{- end }}
      {{- end }}
  values: |-
    {
      "global": {
        "arch": {
          "amd64": 2,
          "ppc64le": 2,
          "s390x": 2
        },
        "caAddress": "",
        "centralIstiod": false,
        "configValidation": true,
        "controlPlaneSecurityEnabled": true,
        "createRemoteSvcEndpoints": false,
        "defaultNodeSelector": {},
        "defaultPodDisruptionBudget": {
          "enabled": true
        },
        "defaultResources": {
          "requests": {
            "cpu": "10m"
          }
        },
        "enableHelmTest": false,
        "enabled": true,
        "hub": "docker.io/istio",
        "imagePullPolicy": "",
        "imagePullSecrets": [],
        "istioNamespace": "istio-system",
        "istiod": {
          "enableAnalysis": false
        },
        "jwtPolicy": "first-party-jwt",
        "logAsJson": false,
        "logging": {
          "level": "default:info"
        },
        "meshExpansion": {
          "enabled": false,
          "useILB": false
        },
        "meshID": "",
        "meshNetworks": {},
        "mountMtlsCerts": false,
        "multiCluster": {
          "clusterName": "",
          "enabled": false
        },
        "namespace": "istio-system",
        "network": "",
        "omitSidecarInjectorConfigMap": false,
        "oneNamespace": false,
        "operatorManageWebhooks": false,
        "pilotCertProvider": "istiod",
        "policyNamespace": "istio-system",
        "priorityClassName": "",
        "proxy": {
          "autoInject": "enabled",
          "clusterDomain": "cluster.local",
          "componentLogLevel": "misc:error",
          "enableCoreDump": false,
          "excludeIPRanges": "",
          "excludeInboundPorts": "",
          "excludeOutboundPorts": "",
          "holdApplicationUntilProxyStarts": false,
          "image": "proxyv2",
          "includeIPRanges": "*",
          "logLevel": "warning",
          "privileged": false,
          "readinessFailureThreshold": 30,
          "readinessInitialDelaySeconds": 1,
          "readinessPeriodSeconds": 2,
          "resources": {
            "limits": {
              "cpu": "2000m",
              "memory": "1024Mi"
            },
            "requests": {
              "cpu": "10m",
              "memory": "40Mi"
            }
          },
          "statusPort": 15020,
          "tracer": "zipkin"
        },
        "proxy_init": {
          "image": "proxyv2",
          "resources": {
            "limits": {
              "cpu": "2000m",
              "memory": "1024Mi"
            },
            "requests": {
              "cpu": "10m",
              "memory": "10Mi"
            }
          }
        },
        "remotePilotAddress": "",
        "remotePolicyAddress": "",
        "remoteTelemetryAddress": "",
        "sds": {
          "token": {
            "aud": "istio-ca"
          }
        },
        "sts": {
          "servicePort": 0
        },
        "tag": "1.7.4",
        "telemetryNamespace": "istio-system",
        "tracer": {
          "datadog": {
            "address": "$(HOST_IP):8126"
          },
          "lightstep": {
            "accessToken": "",
            "address": ""
          },
          "stackdriver": {
            "debug": false,
            "maxNumberOfAnnotations": 200,
            "maxNumberOfAttributes": 200,
            "maxNumberOfMessageEvents": 200
          },
          "zipkin": {
            "address": ""
          }
        },
        "trustDomain": "cluster.local",
        "useMCP": false
      },
      "istio_cni": {
        "enabled": false
      },
      "revision": "",
      "sidecarInjectorWebhook": {
        "alwaysInjectSelector": [],
        "enableNamespacesByDefault": false,
        "injectLabel": "istio-injection",
        "injectedAnnotations": {},
        "neverInjectSelector": [],
        "objectSelector": {
          "autoInject": true,
          "enabled": false
        },
        "rewriteAppHTTPProbe": true
      }
    }
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"config":"policy: enabled\nalwaysInjectSelector:\n  []\nneverInjectSelector:\n  []\ninjectedAnnotations:\n\ntemplate: |\n  rewriteAppHTTPProbe: {{ valueOrDefault .Values.sidecarInjectorWebhook.rewriteAppHTTPProbe false }}\n  initContainers:\n  {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}\n  {{ if .Values.istio_cni.enabled -}}\n  - name: istio-validation\n  {{ else -}}\n  - name: istio-init\n  {{ end -}}\n  {{- if contains \"/\" .Values.global.proxy_init.image }}\n    image: \"{{ .Values.global.proxy_init.image }}\"\n  {{- else }}\n    image: \"{{ .Values.global.hub }}/{{ .Values.global.proxy_init.image }}:{{ .Values.global.tag }}\"\n  {{- end }}\n    args:\n    - istio-iptables\n    - \"-p\"\n    - 15001\n    - \"-z\"\n    - \"15006\"\n    - \"-u\"\n    - 1337\n    - \"-m\"\n    - \"{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}\"\n    - \"-i\"\n    - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}\"\n    - \"-x\"\n    - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}\"\n    - \"-b\"\n    - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` `*` }}\"\n    - \"-d\"\n  {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}\n    - \"15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}\"\n  {{- else }}\n    - \"15090,15021\"\n  {{- end }}\n    {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts \"\") \"\") -}}\n    - \"-q\"\n    - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}\"\n    {{ end -}}\n    {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts \"\") \"\") -}}\n    - \"-o\"\n    - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}\"\n    {{ end -}}\n    {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}\n    - \"-k\"\n    - \"{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}\"\n    {{ end -}}\n    {{ if .Values.istio_cni.enabled -}}\n    - \"--run-validation\"\n    - \"--skip-rule-apply\"\n    {{ end -}}\n    imagePullPolicy: \"{{ valueOrDefault .Values.global.imagePullPolicy `Always` }}\"\n  {{- if .ProxyConfig.ProxyMetadata }}\n    env:\n    {{- range $key, $value := .ProxyConfig.ProxyMetadata }}\n    - name: {{ $key }}\n      value: \"{{ $value }}\"\n    {{- end }}\n  {{- end }}\n  {{- if .Values.global.proxy_init.resources }}\n    resources:\n      {{ toYaml .Values.global.proxy_init.resources | indent 4 }}\n  {{- else }}\n    resources: {}\n  {{- end }}\n    securityContext:\n      allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}\n      privileged: {{ .Values.global.proxy.privileged }}\n      capabilities:\n    {{- if not .Values.istio_cni.enabled }}\n        add:\n        - NET_ADMIN\n        - NET_RAW\n    {{- end }}\n        drop:\n        - ALL\n    {{- if not .Values.istio_cni.enabled }}\n      readOnlyRootFilesystem: false\n      runAsGroup: 0\n      runAsNonRoot: false\n      runAsUser: 0\n    {{- else }}\n      readOnlyRootFilesystem: true\n      runAsGroup: 1337\n      runAsUser: 1337\n      runAsNonRoot: true\n    {{- end }}\n    restartPolicy: Always\n  {{ end -}}\n  {{- if eq .Values.global.proxy.enableCoreDump true }}\n  - name: enable-core-dump\n    args:\n    - -c\n    - sysctl -w kernel.core_pattern=/var/lib/istio/data/core.proxy \u0026\u0026 ulimit -c unlimited\n    command:\n      - /bin/sh\n  {{- if contains \"/\" .Values.global.proxy_init.image }}\n    image: \"{{ .Values.global.proxy_init.image }}\"\n  {{- else }}\n    image: \"{{ .Values.global.hub }}/{{ .Values.global.proxy_init.image }}:{{ .Values.global.tag }}\"\n  {{- end }}\n    imagePullPolicy: \"{{ valueOrDefault .Values.global.imagePullPolicy `Always` }}\"\n    resources: {}\n    securityContext:\n      allowPrivilegeEscalation: true\n      capabilities:\n        add:\n        - SYS_ADMIN\n        drop:\n        - ALL\n      privileged: true\n      readOnlyRootFilesystem: false\n      runAsGroup: 0\n      runAsNonRoot: false\n      runAsUser: 0\n  {{ end }}\n  containers:\n  - name: istio-proxy\n  {{- if contains \"/\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}\n    image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}\"\n  {{- else }}\n    image: \"{{ .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}\"\n  {{- end }}\n    ports:\n    - containerPort: 15090\n      protocol: TCP\n      name: http-envoy-prom\n    args:\n    - proxy\n    - sidecar\n    - --domain\n    - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}\n    - --serviceCluster\n    {{ if ne \"\" (index .ObjectMeta.Labels \"app\") -}}\n    - \"{{ index .ObjectMeta.Labels `app` }}.$(POD_NAMESPACE)\"\n    {{ else -}}\n    - \"{{ valueOrDefault .DeploymentMeta.Name `istio-proxy` }}.{{ valueOrDefault .DeploymentMeta.Namespace `default` }}\"\n    {{ end -}}\n    - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel}}\n    - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel}}\n  {{- if .Values.global.sts.servicePort }}\n    - --stsPort={{ .Values.global.sts.servicePort }}\n  {{- end }}\n  {{- if .Values.global.trustDomain }}\n    - --trust-domain={{ .Values.global.trustDomain }}\n  {{- end }}\n  {{- if .Values.global.logAsJson }}\n    - --log_as_json\n  {{- end }}\n  {{- if gt .ProxyConfig.Concurrency.GetValue 0 }}\n    - --concurrency\n    - \"{{ .ProxyConfig.Concurrency.GetValue }}\"\n  {{- end -}}\n  {{- if .Values.global.proxy.lifecycle }}\n    lifecycle:\n      {{ toYaml .Values.global.proxy.lifecycle | indent 4 }}\n  {{- else if .Values.global.proxy.holdApplicationUntilProxyStarts}}\n    lifecycle:\n      postStart:\n        exec:\n          command:\n          - pilot-agent\n          - wait\n  {{- end }}\n    env:\n    - name: JWT_POLICY\n      value: {{ .Values.global.jwtPolicy }}\n    - name: PILOT_CERT_PROVIDER\n      value: {{ .Values.global.pilotCertProvider }}\n    - name: CA_ADDR\n    {{- if .Values.global.caAddress }}\n      value: {{ .Values.global.caAddress }}\n    {{- else }}\n      value: istiod{{- if not (eq .Values.revision \"\") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012\n    {{- end }}\n    - name: POD_NAME\n      valueFrom:\n        fieldRef:\n          fieldPath: metadata.name\n    - name: POD_NAMESPACE\n      valueFrom:\n        fieldRef:\n          fieldPath: metadata.namespace\n    - name: INSTANCE_IP\n      valueFrom:\n        fieldRef:\n          fieldPath: status.podIP\n    - name: SERVICE_ACCOUNT\n      valueFrom:\n        fieldRef:\n          fieldPath: spec.serviceAccountName\n    - name: HOST_IP\n      valueFrom:\n        fieldRef:\n          fieldPath: status.hostIP\n    - name: CANONICAL_SERVICE\n      valueFrom:\n        fieldRef:\n          fieldPath: metadata.labels['service.istio.io/canonical-name']\n    - name: CANONICAL_REVISION\n      valueFrom:\n        fieldRef:\n          fieldPath: metadata.labels['service.istio.io/canonical-revision']\n    - name: PROXY_CONFIG\n      value: |\n             {{ protoToJSON .ProxyConfig }}\n    - name: ISTIO_META_POD_PORTS\n      value: |-\n        [\n        {{- $first := true }}\n        {{- range $index1, $c := .Spec.Containers }}\n          {{- range $index2, $p := $c.Ports }}\n            {{- if (structToJSON $p) }}\n            {{if not $first}},{{end}}{{ structToJSON $p }}\n            {{- $first = false }}\n            {{- end }}\n          {{- end}}\n        {{- end}}\n        ]\n    - name: ISTIO_META_APP_CONTAINERS\n      value: \"{{- range $index, $container := .Spec.Containers }}{{- if ne $index 0}},{{- end}}{{ $container.Name }}{{- end}}\"\n    - name: ISTIO_META_CLUSTER_ID\n      value: \"{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}\"\n    - name: ISTIO_META_INTERCEPTION_MODE\n      value: \"{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}\"\n    {{- if .Values.global.network }}\n    - name: ISTIO_META_NETWORK\n      value: \"{{ .Values.global.network }}\"\n    {{- end }}\n    {{ if .ObjectMeta.Annotations }}\n    - name: ISTIO_METAJSON_ANNOTATIONS\n      value: |\n             {{ toJSON .ObjectMeta.Annotations }}\n    {{ end }}\n    {{- if .DeploymentMeta.Name }}\n    - name: ISTIO_META_WORKLOAD_NAME\n      value: {{ .DeploymentMeta.Name }}\n    {{ end }}\n    {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}\n    - name: ISTIO_META_OWNER\n      value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}\n    {{- end}}\n    {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\n    - name: ISTIO_BOOTSTRAP_OVERRIDE\n      value: \"/etc/istio/custom-bootstrap/custom_bootstrap.json\"\n    {{- end }}\n    {{- if .Values.global.meshID }}\n    - name: ISTIO_META_MESH_ID\n      value: \"{{ .Values.global.meshID }}\"\n    {{- else if .Values.global.trustDomain }}\n    - name: ISTIO_META_MESH_ID\n      value: \"{{ .Values.global.trustDomain }}\"\n    {{- end }}\n    {{- if and (eq .Values.global.proxy.tracer \"datadog\") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}\n    {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}\n    - name: {{ $key }}\n      value: \"{{ $value }}\"\n    {{- end }}\n    {{- end }}\n    {{- range $key, $value := .ProxyConfig.ProxyMetadata }}\n    - name: {{ $key }}\n      value: \"{{ $value }}\"\n    {{- end }}\n    imagePullPolicy: \"{{ valueOrDefault .Values.global.imagePullPolicy `Always` }}\"\n    {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}\n    readinessProbe:\n      httpGet:\n        path: /healthz/ready\n        port: 15021\n      initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}\n      periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}\n      failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}\n    {{ end -}}\n    securityContext:\n      allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}\n      capabilities:\n        {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}\n        add:\n        {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}\n        - NET_ADMIN\n        {{- end }}\n        {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}\n        - NET_BIND_SERVICE\n        {{- end }}\n        {{- end }}\n        drop:\n        - ALL\n      privileged: {{ .Values.global.proxy.privileged }}\n      readOnlyRootFilesystem: {{ not .Values.global.proxy.enableCoreDump }}\n      runAsGroup: 1337\n      fsGroup: 1337\n      {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}\n      runAsNonRoot: false\n      runAsUser: 0\n      {{- else -}}\n      runAsNonRoot: true\n      runAsUser: 1337\n      {{- end }}\n    resources:\n  {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\n    {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}\n      requests:\n        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}\n        cpu: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}\"\n        {{ end }}\n        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}\n        memory: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}\"\n        {{ end }}\n    {{- end }}\n    {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\n      limits:\n        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}\n        cpu: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}\"\n        {{ end }}\n        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}\n        memory: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}\"\n        {{ end }}\n    {{- end }}\n  {{- else }}\n    {{- if .Values.global.proxy.resources }}\n      {{ toYaml .Values.global.proxy.resources | indent 4 }}\n    {{- end }}\n  {{- end }}\n    volumeMounts:\n    {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n    - mountPath: /var/run/secrets/istio\n      name: istiod-ca-cert\n    {{- end }}\n    - mountPath: /var/lib/istio/data\n      name: istio-data\n    {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\n    - mountPath: /etc/istio/custom-bootstrap\n      name: custom-bootstrap-volume\n    {{- end }}\n    # SDS channel between istioagent and Envoy\n    - mountPath: /etc/istio/proxy\n      name: istio-envoy\n    {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n    - mountPath: /var/run/secrets/tokens\n      name: istio-token\n    {{- end }}\n    {{- if .Values.global.mountMtlsCerts }}\n    # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\n    - mountPath: /etc/certs/\n      name: istio-certs\n      readOnly: true\n    {{- end }}\n    - name: istio-podinfo\n      mountPath: /etc/istio/pod\n     {{- if and (eq .Values.global.proxy.tracer \"lightstep\") .ProxyConfig.GetTracing.GetTlsSettings }}\n    - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}\n      name: lightstep-certs\n      readOnly: true\n    {{- end }}\n      {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}\n      {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}\n    - name: \"{{  $index }}\"\n      {{ toYaml $value | indent 4 }}\n      {{ end }}\n      {{- end }}\n  {{- if .ProxyConfig.ProxyMetadata.ISTIO_META_DNS_CAPTURE }}\n  dnsConfig:\n    options:\n    - name: \"ndots\"\n      value: \"4\"\n  {{- end }}\n  volumes:\n  {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\n  - name: custom-bootstrap-volume\n    configMap:\n      name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` \"\" }}\n  {{- end }}\n  # SDS channel between istioagent and Envoy\n  - emptyDir:\n      medium: Memory\n    name: istio-envoy\n  - name: istio-data\n    emptyDir: {}\n  - name: istio-podinfo\n    downwardAPI:\n      items:\n        - path: \"labels\"\n          fieldRef:\n            fieldPath: metadata.labels\n        - path: \"annotations\"\n          fieldRef:\n            fieldPath: metadata.annotations\n  {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n  - name: istio-token\n    projected:\n      sources:\n      - serviceAccountToken:\n          path: istio-token\n          expirationSeconds: 43200\n          audience: {{ .Values.global.sds.token.aud }}\n  {{- end }}\n  {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n  - name: istiod-ca-cert\n    configMap:\n      name: istio-ca-root-cert\n  {{- end }}\n  {{- if .Values.global.mountMtlsCerts }}\n  # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\n  - name: istio-certs\n    secret:\n      optional: true\n      {{ if eq .Spec.ServiceAccountName \"\" }}\n      secretName: istio.default\n      {{ else -}}\n      secretName: {{  printf \"istio.%s\" .Spec.ServiceAccountName }}\n      {{  end -}}\n  {{- end }}\n    {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}\n    {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}\n  - name: \"{{ $index }}\"\n    {{ toYaml $value | indent 2 }}\n    {{ end }}\n    {{ end }}\n  {{- if and (eq .Values.global.proxy.tracer \"lightstep\") .ProxyConfig.GetTracing.GetTlsSettings }}\n  - name: lightstep-certs\n    secret:\n      optional: true\n      secretName: lightstep.cacert\n  {{- end }}\n  {{- if .Values.global.podDNSSearchNamespaces }}\n  dnsConfig:\n    searches:\n      {{- range .Values.global.podDNSSearchNamespaces }}\n      - {{ render . }}\n      {{- end }}\n  {{- end }}\n  podRedirectAnnot:\n  {{- if and (.Values.istio_cni.enabled) (not .Values.istio_cni.chained) }}\n  {{ if isset .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks` }}\n    k8s.v1.cni.cncf.io/networks: \"{{ index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`}}, istio-cni\"\n  {{- else }}\n    k8s.v1.cni.cncf.io/networks: \"istio-cni\"\n  {{- end }}\n  {{- end }}\n    sidecar.istio.io/interceptionMode: \"{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}\"\n    traffic.sidecar.istio.io/includeOutboundIPRanges: \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}\"\n    traffic.sidecar.istio.io/excludeOutboundIPRanges: \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}\"\n    traffic.sidecar.istio.io/includeInboundPorts: \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` (includeInboundPorts .Spec.Containers) }}\"\n    traffic.sidecar.istio.io/excludeInboundPorts: \"{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}\"\n  {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts \"\") \"\") }}\n    traffic.sidecar.istio.io/includeOutboundPorts: \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}\"\n  {{- end }}\n  {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts \"\") }}\n    traffic.sidecar.istio.io/excludeOutboundPorts: \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}\"\n  {{- end }}\n    traffic.sidecar.istio.io/kubevirtInterfaces: \"{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}\"\n  {{- if .Values.global.imagePullSecrets }}\n  imagePullSecrets:\n    {{- range .Values.global.imagePullSecrets }}\n    - name: {{ . }}\n    {{- end }}\n  {{- end }}","values":"{\n  \"global\": {\n    \"arch\": {\n      \"amd64\": 2,\n      \"ppc64le\": 2,\n      \"s390x\": 2\n    },\n    \"caAddress\": \"\",\n    \"centralIstiod\": false,\n    \"configValidation\": true,\n    \"controlPlaneSecurityEnabled\": true,\n    \"createRemoteSvcEndpoints\": false,\n    \"defaultNodeSelector\": {},\n    \"defaultPodDisruptionBudget\": {\n      \"enabled\": true\n    },\n    \"defaultResources\": {\n      \"requests\": {\n        \"cpu\": \"10m\"\n      }\n    },\n    \"enableHelmTest\": false,\n    \"enabled\": true,\n    \"hub\": \"docker.io/istio\",\n    \"imagePullPolicy\": \"\",\n    \"imagePullSecrets\": [],\n    \"istioNamespace\": \"istio-system\",\n    \"istiod\": {\n      \"enableAnalysis\": false\n    },\n    \"jwtPolicy\": \"first-party-jwt\",\n    \"logAsJson\": false,\n    \"logging\": {\n      \"level\": \"default:info\"\n    },\n    \"meshExpansion\": {\n      \"enabled\": false,\n      \"useILB\": false\n    },\n    \"meshID\": \"\",\n    \"meshNetworks\": {},\n    \"mountMtlsCerts\": false,\n    \"multiCluster\": {\n      \"clusterName\": \"\",\n      \"enabled\": false\n    },\n    \"namespace\": \"istio-system\",\n    \"network\": \"\",\n    \"omitSidecarInjectorConfigMap\": false,\n    \"oneNamespace\": false,\n    \"operatorManageWebhooks\": false,\n    \"pilotCertProvider\": \"istiod\",\n    \"policyNamespace\": \"istio-system\",\n    \"priorityClassName\": \"\",\n    \"proxy\": {\n      \"autoInject\": \"enabled\",\n      \"clusterDomain\": \"cluster.local\",\n      \"componentLogLevel\": \"misc:error\",\n      \"enableCoreDump\": false,\n      \"excludeIPRanges\": \"\",\n      \"excludeInboundPorts\": \"\",\n      \"excludeOutboundPorts\": \"\",\n      \"holdApplicationUntilProxyStarts\": false,\n      \"image\": \"proxyv2\",\n      \"includeIPRanges\": \"*\",\n      \"logLevel\": \"warning\",\n      \"privileged\": false,\n      \"readinessFailureThreshold\": 30,\n      \"readinessInitialDelaySeconds\": 1,\n      \"readinessPeriodSeconds\": 2,\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"2000m\",\n          \"memory\": \"1024Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"10m\",\n          \"memory\": \"40Mi\"\n        }\n      },\n      \"statusPort\": 15020,\n      \"tracer\": \"zipkin\"\n    },\n    \"proxy_init\": {\n      \"image\": \"proxyv2\",\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"2000m\",\n          \"memory\": \"1024Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"10m\",\n          \"memory\": \"10Mi\"\n        }\n      }\n    },\n    \"remotePilotAddress\": \"\",\n    \"remotePolicyAddress\": \"\",\n    \"remoteTelemetryAddress\": \"\",\n    \"sds\": {\n      \"token\": {\n        \"aud\": \"istio-ca\"\n      }\n    },\n    \"sts\": {\n      \"servicePort\": 0\n    },\n    \"tag\": \"1.7.4\",\n    \"telemetryNamespace\": \"istio-system\",\n    \"tracer\": {\n      \"datadog\": {\n        \"address\": \"$(HOST_IP):8126\"\n      },\n      \"lightstep\": {\n        \"accessToken\": \"\",\n        \"address\": \"\"\n      },\n      \"stackdriver\": {\n        \"debug\": false,\n        \"maxNumberOfAnnotations\": 200,\n        \"maxNumberOfAttributes\": 200,\n        \"maxNumberOfMessageEvents\": 200\n      },\n      \"zipkin\": {\n        \"address\": \"\"\n      }\n    },\n    \"trustDomain\": \"cluster.local\",\n    \"useMCP\": false\n  },\n  \"istio_cni\": {\n    \"enabled\": false\n  },\n  \"revision\": \"\",\n  \"sidecarInjectorWebhook\": {\n    \"alwaysInjectSelector\": [],\n    \"enableNamespacesByDefault\": false,\n    \"injectLabel\": \"istio-injection\",\n    \"injectedAnnotations\": {},\n    \"neverInjectSelector\": [],\n    \"objectSelector\": {\n      \"autoInject\": true,\n      \"enabled\": false\n    },\n    \"rewriteAppHTTPProbe\": true\n  }\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"install.operator.istio.io/owning-resource":"wahiki-istiocontrolplane","install.operator.istio.io/owning-resource-namespace":"istio-system","istio.io/rev":"default","operator.istio.io/component":"Pilot","operator.istio.io/managed":"Reconcile","operator.istio.io/version":"1.7.4","release":"istio"},"name":"istio-sidecar-injector","namespace":"istio-system"}}
  creationTimestamp: "2021-03-06T08:57:08Z"
  labels:
    install.operator.istio.io/owning-resource: wahiki-istiocontrolplane
    install.operator.istio.io/owning-resource-namespace: istio-system
    istio.io/rev: default
    operator.istio.io/component: Pilot
    operator.istio.io/managed: Reconcile
    operator.istio.io/version: 1.7.4
    release: istio
  name: istio-sidecar-injector
  namespace: istio-system
  resourceVersion: "1111"
  selfLink: /api/v1/namespaces/istio-system/configmaps/istio-sidecar-injector
  uid: 89e9adba-92dd-40a0-bcf8-b80c9bd30283
